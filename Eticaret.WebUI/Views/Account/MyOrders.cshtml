@model List<Eticaret.Core.Entities.Order>
@using Eticaret.Core.Helpers

@{
    ViewData["Title"] = "Siparişlerim";
}

<div class="container-fluid">
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <h2 class="mb-0">
                    <i class="fas fa-shopping-bag text-primary me-2"></i>
                    Siparişlerim
                </h2>
                <a asp-controller="Home" asp-action="Index" class="btn btn-outline-primary">
                    <i class="fas fa-arrow-left me-2"></i>Alışverişe Dön
                </a>
            </div>
        </div>
    </div>

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="fas fa-exclamation-triangle me-2"></i>
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    @if (!Model.Any())
    {
        <div class="row justify-content-center">
            <div class="col-lg-6">
                <div class="card border-0 shadow-sm">
                    <div class="card-body text-center p-5">
                        <div class="mb-4">
                            <i class="fas fa-shopping-bag text-muted" style="font-size: 4rem;"></i>
                        </div>
                        <h4 class="text-muted mb-3">Henüz Siparişiniz Bulunmuyor</h4>
                        <p class="text-muted mb-4">
                            İlk siparişinizi vermek için alışverişe başlayabilirsiniz.
                        </p>
                        <a asp-controller="Home" asp-action="Index" class="btn btn-primary">
                            <i class="fas fa-shopping-cart me-2"></i>Alışverişe Başla
                        </a>
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="row">
            @foreach (var order in Model)
            {
                <div class="col-lg-6 col-xl-4 mb-4">
                    <div class="card border-0 shadow-sm h-100">
                        <div class="card-header bg-white border-0 py-3">
                            <div class="d-flex justify-content-between align-items-center">
                                <h6 class="mb-0 text-primary fw-bold">
                                    <i class="fas fa-hashtag me-2"></i>@order.OrderNumber
                                </h6>
                                @{
                                    var badgeClass = order.OrderState switch
                                    {
                                        Eticaret.Core.Entities.EnumOrderState.Waiting => "bg-warning text-dark",
                                        Eticaret.Core.Entities.EnumOrderState.Approved => "bg-info text-white",
                                        Eticaret.Core.Entities.EnumOrderState.Shipped => "bg-primary text-white",
                                        Eticaret.Core.Entities.EnumOrderState.Completed => "bg-success text-white",
                                        Eticaret.Core.Entities.EnumOrderState.Cancelled => "bg-danger text-white",
                                        _ => "bg-secondary text-white"
                                    };
                                }
                                <span class="badge @badgeClass">
                                    @order.OrderState.GetDisplayName()
                                </span>
                            </div>
                        </div>
                        <div class="card-body">
                            <div class="row mb-3">
                                <div class="col-6">
                                    <small class="text-muted d-block">
                                        <i class="fas fa-calendar me-1"></i>Sipariş Tarihi
                                    </small>
                                    <strong>@order.OrderDate.ToString("dd.MM.yyyy")</strong>
                                </div>
                                <div class="col-6">
                                    <small class="text-muted d-block">
                                        <i class="fas fa-clock me-1"></i>Saat
                                    </small>
                                    <strong>@order.OrderDate.ToString("HH:mm")</strong>
                                </div>
                            </div>

                            <div class="mb-3">
                                <small class="text-muted d-block">
                                    <i class="fas fa-money-bill me-1"></i>Toplam Tutar
                                </small>
                                <span class="text-success fw-bold fs-5">@order.TotalPrice.ToString("c")</span>
                            </div>

                            @if (order.OrderLines != null && order.OrderLines.Any())
                            {
                                <div class="mb-3">
                                    <small class="text-muted d-block">
                                        <i class="fas fa-box me-1"></i>Sipariş Edilen Ürünler
                                    </small>
                                    <div class="mt-2">
                                        @foreach (var orderLine in order.OrderLines.Take(3))
                                        {
                                            <div class="d-flex align-items-center mb-1">
                                                <div class="bg-light rounded-circle d-flex align-items-center justify-content-center me-2" 
                                                     style="width: 30px; height: 30px;">
                                                    <i class="fas fa-box text-muted" style="font-size: 0.8rem;"></i>
                                                </div>
                                                <div class="flex-grow-1">
                                                    <small class="fw-bold">@orderLine.Product?.Name</small>
                                                    <br>
                                                    <small class="text-muted">@orderLine.Quantity adet</small>
                                                </div>
                                                <small class="text-primary fw-bold">@orderLine.UnitPrice.ToString("c")</small>
                                            </div>
                                        }
                                        @if (order.OrderLines.Count > 3)
                                        {
                                            <small class="text-muted">
                                                <i class="fas fa-ellipsis-h me-1"></i>
                                                ve @(order.OrderLines.Count - 3) ürün daha...
                                            </small>
                                        }
                                    </div>
                                </div>
                            }

                            <div class="mb-3">
                                <small class="text-muted d-block">
                                    <i class="fas fa-map-marker-alt me-1"></i>Teslimat Adresi
                                </small>
                                <small class="text-muted">@order.DeliveryAddress</small>
                            </div>

                            <div class="d-grid">
                                <a asp-controller="Account" asp-action="OrderDetail" asp-route-id="@order.Id" 
                                   class="btn btn-outline-primary">
                                    <i class="fas fa-eye me-2"></i>Sipariş Detayı
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

<style>
    .card {
        border-radius: 0.75rem;
        overflow: hidden;
        transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
    }
    
    .card:hover {
        transform: translateY(-2px);
        box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15) !important;
    }
    
    .badge {
        font-size: 0.8rem;
        padding: 0.5rem 0.75rem;
    }
    
    .btn {
        border-radius: 0.5rem;
        font-weight: 500;
    }
    
    .alert {
        border-radius: 0.5rem;
    }
</style>
